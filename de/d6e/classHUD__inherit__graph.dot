digraph "HUD"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{HUD\n|- std::string message\l- std::pair\< float, float\l \> coordinates\l- std::size_t size\l- Rectangle drawingArea\l- std::pair\< bool, std\l::optional\< std::string\l \> \> newMessage\l|+  HUD()\l+  HUD(std::string message,\l std::pair\< float, float\l \> coordinates, size_t size)\l+ void draw() override\l+ void update(float ms)\l override\l+ void updateText(std\l::string text)\l+ const std::pair\< float,\l float \> & getCoordinates\l() const\l+ size_t getSize() const\l+ float getLength() const\l+ void setTextBrush(Brush\l type)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Drawable\n||+ virtual void draw()=0\l+ virtual ~Drawable()\l=default\l}",height=0.2,width=0.4,color="black",URL="$de/db8/classDrawable.html",tooltip=" "];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Updateable\n||+ virtual void update\l(float ms)=0\l+ virtual ~Updateable\l()=default\l}",height=0.2,width=0.4,color="black",URL="$d2/d7d/classUpdateable.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{PawnCount\n||+  PawnCount(std::pair\l\< float, float \> coordinates,\l size_t size)\l}",height=0.2,width=0.4,color="black",URL="$d5/d4d/classPawnCount.html",tooltip=" "];
}
