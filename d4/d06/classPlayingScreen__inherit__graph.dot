digraph "PlayingScreen"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{PlayingScreen\n|- std::shared_ptr\< Squares\l \> capturedWhiteSquares\l- std::shared_ptr\< Squares\l \> capturedBlackSquares\l- std::shared_ptr\< Game\l \> game\l- static constexpr unsigned\l short int numberOfUniquePawns\l|+  PlayingScreen()\l+ void draw() override\l+ void update(float ms)\l override\l+ std::shared_ptr\< Square\l \> getSquare(const std\l::shared_ptr\< Pawn \> &pawn) const\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Screen\n||+  Screen()\l+ void draw() override=0\l+ void update(float ms)\l override=0\l}",height=0.2,width=0.4,color="black",URL="$df/dc5/classScreen.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Drawable\n||+ virtual void draw()=0\l+ virtual ~Drawable()\l=default\l}",height=0.2,width=0.4,color="black",URL="$de/db8/classDrawable.html",tooltip=" "];
  Node4 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Updateable\n||+ virtual void update\l(float ms)=0\l+ virtual ~Updateable\l()=default\l}",height=0.2,width=0.4,color="black",URL="$d2/d7d/classUpdateable.html",tooltip=" "];
}
